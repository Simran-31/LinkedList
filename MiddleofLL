//Approach 1:

/*
Following is the class structure of the Node class:

class Node
{
public:
    int data;
    Node *next;
    Node()
    {
        this->data = 0;
        next = NULL;
    }
    Node(int data)
    {
        this->data = data; 
        this->next = NULL;
    }
    Node(int data, Node* next)
    {
        this->data = data;
        this->next = next;
    }
};
*/

int getlen(Node *head){
    int len=0;
    while(head!=NULL){
        len++;
        head=head->next;
    }
    return len;
}
Node *findMiddle(Node *head) {
    // Write your code here
    int len=getlen(head);
    int ans=(len/2);
    Node *temp=head;
    int c=0;
    while(c<ans){
        temp=temp->next;
        c++;

    }
    
    return temp ;
}


//Approach 2:
/*
Following is the class structure of the Node class:

class Node
{
public:
    int data;
    Node *next;
    Node()
    {
        this->data = 0;
        next = NULL;
    }
    Node(int data)
    {
        this->data = data; 
        this->next = NULL;
    }
    Node(int data, Node* next)
    {
        this->data = data;
        this->next = next;
    }
};
*/

Node *getmid(Node *head){
    if(head==NULL || head->next==NULL){return head;}

    if(head->next->next==NULL){
        return head->next;
    }
    Node *fast=head->next;
    Node *slow=head;

    while(fast!=NULL){
        fast=fast->next;
        if(fast!=NULL){
            fast=fast->next;
        }
        slow=slow->next;

    }
    return slow;
}
Node *findMiddle(Node *head) {
    // Write your code here
    return getmid(head);
    
   
}
